name: ci-py-lambda-workshop

on:
  pull_request:
    branches: [main]

env:
  release_bucket: kyc-release-manager
  release_bucket_uri: s3://kyc-release-manager
  short_id: ${{ github.run_id }}
  branch_name: ${{ github.head_ref }}
  repo: ${{ github.event.repository.name }}
  service_name: image-cipher

jobs:
  unit-testing:
    name: Run code integration
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Prepare python environment
        uses: ./.github/actions/setup-python
        with:
          runner-os: ${{ runner.os }}
      - name: Executing unit testing
        run: |
          echo "running unit tests..."
          PYTHONPATH=. PYTHONDONTWRITEBYTECODE=1 pytest -v --cov --cov-report=xml --cov-report=html
      - name: Lint code
        run: |
          pylint --rcfile=setup.cfg -j 4 .

  check-dependencies-layer:
    name: Check depedencies layer
    runs-on: ubuntu-latest
    needs: unit-testing
    outputs:
      is-update-required: ${{ steps.validate-requirements.outputs.is-update-required }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check requirements.txt
        id: validate-requirements
        uses: ./.github/actions/check-py-requirements

  build-layer:
    if: ${{ needs.check-dependencies-layer.outputs.is-update-required == 'true' }}
    name: Build AWS lambda layer
    runs-on: ubuntu-latest
    needs: check-dependencies-layer
    outputs:
      is-update-required: ${{ needs.check-dependencies-layer.outputs.is-update-required }}

    steps:
      - uses: actions/checkout@v3
      - name: Prepare python environment
        uses: ./.github/actions/setup-python
        with:
          custom-install-dir: python
          runner-os: ${{ runner.os }}

      - name: Build lambda layers artifact
        uses: ./.github/actions/build-lambda-layers
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

  build-source-code:
    if: |
      always()
      && (needs.build-layer.result == 'skipped' || needs.build-layer.result == 'success')
      && (needs.unit-testing.result != 'failure')
    name: Build AWS lambda source code
    runs-on: ubuntu-latest
    needs: [build-layer, unit-testing]

    steps:
      - uses: actions/checkout@v3
      - name: Build lambda source
        uses: ./.github/actions/build-lambda-source
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
          require_update_layer: ${{ needs.build-layer.outputs.is-update-required }}
