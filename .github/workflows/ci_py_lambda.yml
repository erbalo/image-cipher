name: ci-py-lambda

on:
  pull_request:
    branches: [main]

env:
  release_bucket: draco-release-manager
  release_bucket_uri: s3://draco-release-manager
  release_source_folder: source
  release_layer_folder: layers
  short_id: ${{ github.run_id }}
  branch_name: ${{ github.head_ref }}
  repo: ${{ github.event.repository.name }}

jobs:
  check-dependencies-layer:
    name: Check depedencies layer
    runs-on: ubuntu-latest
    outputs:
      upload-layers: ${{ steps.validate-requirements.outputs.run-job }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Validate requirements
        id: validate-requirements
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          found=false

          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            if [[ $file = "requirements.txt" ]]; then
              echo "requirements.txt was updated, update lambda layers required"
              echo "run-job=true" >> $GITHUB_OUTPUT
              found=true
              break
            fi
          done < files.txt

          if [ "$found" = false ]; then
              echo "No lambda layers update needed"
              echo "run-job=false" >> $GITHUB_OUTPUT
          fi

  build-layer:
    if: ${{ needs.check-dependencies-layer.outputs.upload-layers == 'true' }}
    name: Build AWS lambda layer
    runs-on: ubuntu-latest
    needs: check-dependencies-layer

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # For more info: https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Zip dependencies and upload it to artifact manager
        run: |
          mkdir python
          pip install -r requirements.txt -t python
          echo "building release $short_id..."

          # zip it up
          dependencies="${short_id}_dependencies.zip"
          zip --quiet -r $dependencies python

          # copy the file to S3 and install it in lambda layers
          path_key="$release_bucket_uri/$release_layer_folder/$repo/$branch_name/"
          aws s3 cp $dependencies $path_key
          # aws lambda publish-layer-version --layer-name $release_layer  --content S3Bucket=$release_bucket,S3Key=$release_key/$release_id --compatible-runtimes python3.9

  build-source-code:
    name: Upload source code to artifact manager
    runs-on: ubuntu-latest
    needs: build-layer

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # For more info: https://github.com/aws-actions/configure-aws-credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Setup Python 3.9
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Zip source code
        run: |
          source="${short_id}_source.zip"
          zip -r $source entrypoint internal

      - name: Upload artifact source code
        run: |
          echo '{"sha": "${{ github.sha }}", "branch": "${{ github.head_ref }}", "id": "${{ env.short_id }}", "repo": "${{ env.repo }}" }' > definitions.json
          path_key="$release_bucket_uri/$release_source_folder/$repo/$branch_name/"
          source="${short_id}_source.zip"
          aws s3 cp $source $path_key
          aws s3 cp definitions.json $path_key
